{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","console","log","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_DATA","App","setExpenses","prevExpense","ReactDOM","createRoot","document","getElementById","render"],"mappings":"8bAiGeA,EA9FK,SAACC,GAGnB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KA4CA,OACE,8BACE,uBAAMC,SAjBY,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAc,CAClBC,MAAOV,EACPW,QAAST,EACTU,KAAM,IAAIC,KAAKT,IAGjBN,EAAMgB,kBAAkBL,GACxBR,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAKkBU,UAAU,mBAAzC,UACE,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBACEC,KAAK,OACLC,MAAOjB,EACPkB,SA5Ce,SAACX,GAE1BN,EAAgBM,EAAMY,OAAOF,aA6CvB,sBAAKF,UAAU,uBAAf,UACE,2CACA,uBACEC,KAAK,SACLI,IAAI,OACJC,KAAK,OACLJ,MAAOf,EACPgB,SA3CgB,SAACX,GAC3BJ,EAAiBI,EAAMY,OAAOF,aA6CxB,sBAAKF,UAAU,uBAAf,UACE,yCACA,uBACEC,KAAK,OACLI,IAAI,aACJE,IAAI,aACJL,MAAOb,EACPc,SAjDc,SAACX,GACzBF,EAAeE,EAAMY,OAAOF,gBAoDxB,sBAAKF,UAAU,uBAAf,UAEE,wBAAQC,KAAK,SAASO,QAASzB,EAAM0B,SAArC,oBAGA,wBAAQR,KAAK,SAAb,kCC7CKS,EAzCI,SAAC3B,GAClB,IASA,EAAkCC,oBAAS,GAA3C,mBAAO2B,EAAP,KAAkBC,EAAlB,KAUA,OACE,sBAAKZ,UAAU,sCAAf,WACIW,GACA,wBACEH,QAbqB,WAC3BK,QAAQC,IAAI,yBACZF,GAAa,IAYPZ,UAAU,uBACVC,KAAK,SAHP,6BAQDU,GACC,cAAC,EAAD,CACEZ,kBAhCuB,SAACgB,GAC9B,IAAMrB,EAAW,2BACZqB,GADY,IAEfC,GAAIC,KAAKC,SAASC,aAEpBpC,EAAMqC,aAAa1B,GACnBkB,GAAa,IA2BPH,SAlBmB,WACzBG,GAAa,UCZFS,G,MANF,SAACtC,GACZ,IAAMuC,EAAU,QAAUvC,EAAMiB,UAEhC,OAAO,qBAAKA,UAAWsB,EAAhB,SAA0BvC,EAAMwC,aCkB1BC,G,MArBQ,SAACzC,GAKtB,OACE,qBAAKiB,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQE,MAAOnB,EAAM0C,SAAUtB,SARP,SAACX,GAC7BT,EAAM2C,eAAelC,EAAMY,OAAOF,QAO9B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4BCAKyB,G,MAdK,SAAC5C,GACnB,IAAM6C,EAAQ7C,EAAMc,KAAKgC,eAAe,QAAS,CAAED,MAAO,SACpDE,EAAM/C,EAAMc,KAAKgC,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOhD,EAAMc,KAAKmC,cAExB,OACE,sBAAKhC,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsC4B,IACtC,qBAAK5B,UAAU,qBAAf,SAAqC+B,IACrC,qBAAK/B,UAAU,qBAAf,SAAqC8B,SCM5BG,G,MAZK,SAAClD,GACnB,OACE,eAAC,EAAD,CAAMiB,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaH,KAAMd,EAAMc,OACzB,sBAAKG,UAAU,4BAAf,UACE,6BAAKjB,EAAMY,QACX,sBAAKK,UAAU,sBAAf,cAAuCjB,EAAMa,kBCWtCsC,G,MAnBM,SAACnD,GACpB,OAA2B,IAAvBA,EAAMoD,MAAMC,OACP,oBAAIpC,UAAU,0BAAd,gCAIP,oBAAIA,UAAU,gBAAd,SACGjB,EAAMoD,MAAME,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEE3C,MAAO2C,EAAQ3C,MACfC,OAAQ0C,EAAQ1C,OAChBC,KAAMyC,EAAQzC,MAHTyC,EAAQtB,W,OCURuB,G,MApBE,SAACxD,GAChB,IAAIyD,EAAgB,KAMpB,OAJIzD,EAAM0D,SAAW,IACnBD,EAAgBvB,KAAKyB,MAAO3D,EAAMmB,MAAQnB,EAAM0D,SAAY,KAAO,KAInE,sBAAKzC,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACV2C,MAAO,CAAEC,OAAQJ,OAGrB,qBAAKxC,UAAU,mBAAf,SAAmCjB,EAAM8D,aCIhCC,G,MAlBD,SAAC/D,GACb,IAAMgE,EAAkBhE,EAAMiE,WAAWX,KAAI,SAACY,GAAD,OAAeA,EAAU/C,SAChEgD,EAAejC,KAAKV,IAAL,MAAAU,KAAI,YAAQ8B,IAEjC,OACE,qBAAK/C,UAAU,QAAf,SACGjB,EAAMiE,WAAWX,KAAI,SAACY,GAAD,OACpB,cAAC,EAAD,CAEE/C,MAAO+C,EAAU/C,MACjBuC,SAAUS,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,cCeVM,EAxBO,SAACpE,GACrB,IAD+B,EACzBqE,EAAkB,CACtB,CAAEP,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,IAbM,cAgBTnB,EAAMsE,UAhBG,IAgB/B,2BAAsC,CAAC,IAA5Bf,EAA2B,QAEpCc,EADqBd,EAAQzC,KAAKyD,YACJpD,OAASoC,EAAQ1C,QAlBlB,8BAqB/B,OAAO,cAAC,EAAD,CAAOoD,WAAYI,KCSbG,G,MAzBE,SAACxE,GAChB,MAAwCC,mBAAS,QAAjD,mBAAOwE,EAAP,KAAqBC,EAArB,KAMMC,EAAmB3E,EAAMoD,MAAMwB,QAAO,SAACrB,GAC3C,OAAOA,EAAQzC,KAAKmC,cAAcb,aAAeqC,KAGnD,OACE,8BACE,eAAC,EAAD,CAAMxD,UAAU,WAAhB,UACE,cAAC,EAAD,CACEyB,SAAU+B,EACV9B,eAboB,SAACkC,GAC3BH,EAAgBG,MAcZ,cAAC,EAAD,CAAeP,SAAUK,IACzB,cAAC,EAAD,CAAcvB,MAAOuB,WCvBvBG,EAAa,CACjB,CACE7C,GAAI,KACJrB,MAAO,eACPC,OAAQ,MACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CAAEkB,GAAI,KAAMrB,MAAO,SAAUC,OAAQ,OAAQC,KAAM,IAAIC,KAAK,KAAM,EAAG,KACrE,CACEkB,GAAI,KACJrB,MAAO,gBACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEkB,GAAI,KACJrB,MAAO,oBACPC,OAAQ,IACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEkB,GAAI,KACJrB,MAAO,mBACPC,OAAQ,IACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,MAsBbgE,EAjBH,WACV,MAAgC9E,mBAAS6E,GAAzC,mBAAOR,EAAP,KAAiBU,EAAjB,KAOA,OACE,sBAAK/D,UAAU,0BAAf,UACE,cAAC,EAAD,CAAYoB,aARU,SAACkB,GACzByB,GAAY,SAACC,GACX,MAAM,CAAE1B,GAAR,mBAAoB0B,UAOpB,cAAC,EAAD,CAAU7B,MAAOkB,QC7BVY,IAASC,WAAWC,SAASC,eAAe,SAGpDC,OAAO,cAAC,EAAD,O","file":"static/js/main.78e60537.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  // The React useState Hook allows us to track state in a function component. State generally refers to data or properties that need to be tracking in an application.\n  // 1. method one\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  // 2. method two\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: \"\",\n  //   enteredAmount: \"\",\n  //   enteredData: \"\",\n  // });\n\n  const titleChangeHandler = (event) => {\n    // 1. method one\n    setEnteredTitle(event.target.value); // the value would always be a string\n\n    // 2. method two\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    //   // ... takes an object and pull out all the key value pairs and add them to the new object\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  // collect the data input in the form\n  const submitHandler = (event) => {\n    event.preventDefault(); // prevent sending request and reloading the page.\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\"); // overwrite what the user entered to empty after form is submitted.(clear the form)\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <div>\n      <form onSubmit={submitHandler} className=\"form level_three\">\n        <div className=\"new-expense__controls\">\n          <div className=\"new-expense__control\">\n            <label>Title</label>\n            <input\n              type=\"text\"\n              value={enteredTitle}\n              onChange={titleChangeHandler}\n            ></input>\n          </div>\n          <div className=\"new-expense__control\">\n            <label>Amount</label>\n            <input\n              type=\"number\"\n              min=\"0.01\"\n              step=\"0.01\"\n              value={enteredAmount}\n              onChange={amountChangeHandler}\n            ></input>\n          </div>\n          <div className=\"new-expense__control\">\n            <label>Date</label>\n            <input\n              type=\"date\"\n              min=\"2019-01-01\"\n              max=\"2024-11-20\"\n              value={enteredDate}\n              onChange={dateChangeHandler}\n            ></input>\n          </div>\n        </div>\n        <div className=\"new-expense__actions\">\n          {/* point a function from different file */}\n          <button type=\"button\" onClick={props.onCancel}>\n            Cancel\n          </button>\n          <button type=\"submit\">Add Expense</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const [isEditing, setIsEditing] = useState(false);\n  const addNewExpenseHandler = () => {\n    console.log(\"button is clicked!!!!\");\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"NewExpense_js level_two new-expense\">\n      {!isEditing && (\n        <button\n          onClick={addNewExpenseHandler}\n          className=\"new-expense__actions\"\n          type=\"submit\"\n        >\n          Add New Expense\n        </button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n          <option value=\"2018\">2018</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\nimport \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__date\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","// useState function is provide by react library, reflect the changes in state, only can be called inside a component direct function, always return in array\nimport React from \"react\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card.js\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_DATA = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2019, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n  {\n    id: \"e5\",\n    title: \"New Desk (White)\",\n    amount: 450,\n    date: new Date(2022, 5, 12),\n  },\n];\n\n// arrow functions\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_DATA);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpense) => {\n      return [expense, ...prevExpense];\n    });\n  };\n\n  return (\n    <div className=\"APP_js level_one parent\">\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}; // end of the function\n\n// 1. export the file\nexport default App;\n","// index.js file is the first file to be executed\n\n// package.json -dependencies\nimport ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\n\n//  ./ means it's in the same folder\n// ./App = ./App.js\n// App is components\n// 2. import the file\nimport App from \"./App\";\n\n// the root of application, the main pace where the react application get rendered too\n// the root of react application\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\n// tell react what it should render\nroot.render(<App />);\n"],"sourceRoot":""}